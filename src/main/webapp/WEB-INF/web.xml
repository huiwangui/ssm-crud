<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	<!-- 修改Spring配置文件的位置及名称 -->
    <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>	     
			classpath:spring-context.xml
		</param-value>
	</context-param>
	  
    <!-- 注册ServletContext监听器 -->
    <listener>
  		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
 	</listener>
  
  	<!-- Spring MVC -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				classpath:/spring-mvc*.xml
			</param-value>
		</init-param>
		<!--
			配置springmvc什么时候启动
			1、如果大于0或者为0，则springmvc随着容器的启动而启动
			2、如果小于0或者不配置，则在第一次请求进来的时候启动
		-->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!--
			1、/* 拦截所有 jsp js png .css 真的全拦截 建议不使用
			2、*.do *.action 拦截do action结尾的请求
			3、/ 拦截所有(不包括jsp) (包括 .js .png .css ) 强烈建议使用
		-->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!--
		设定字符编码过滤器：一定要放在所有过滤器之前
	 	如果要处理GET提交乱码问题需要在tomcat的server.xml中处理
	 	处理POST提交乱码问题
	-->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceRequestEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>forceResponseEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 使用Rest风格的URI:将页面普通的post请求转为指定的delete或者put请求-->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>		 
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>HttpPutFormContentFilter</filter-name>
		<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>		 
	</filter>
	<filter-mapping>
		<filter-name>HttpPutFormContentFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>